[tool.commitizen]
name = "cz_customize"
tag_format = "$version"
version_scheme = "semver2"
version_provider = "npm"
update_changelog_on_bump = true
major_version_zero = true

[tool.commitizen.customize]
message_template = "{{change_type}}{% if show_scope %}({{scope}}){% endif %}: {{message}}"
example = "feature: this feature enable customize through config file"
schema = "<type>: <body>"
schema_pattern = "(feature|bug fix):(\\s.*)"
bump_pattern = "^(break|new|fix|hotfix)"
bump_map = {"break" = "MAJOR", "new" = "MINOR", "fix" = "PATCH", "hotfix" = "PATCH"}
change_type_order = ["BREAKING CHANGE", "feat", "fix", "refactor", "perf"]
info_path = "cz_customize_info.txt"
info = """
This is customized info
"""
commit_parser = "^(?P<change_type>feature|bug fix):\\s(?P<message>.*)?"
changelog_pattern = "^(feature|bug fix)?(!)?"
change_type_map = {"feature" = "Feat", "bug fix" = "Fix"}

[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
choices = [
  {value = "fix", name = "fix: A bug fix. Correlates with PATCH in SemVer"},
  {value = "feat", name = "feat: A new feature. Correlates with MINOR in SemVer"},
  {value = "docs", name = "docs: Documentation only changes"},
  {value = "style", name = "style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"},
  {value = "refactor", name = "refactor: A code change that neither fixes a bug nor adds a feature"},
  {value = "perf", name = "perf: A code change that improves performance"},
  {value = "test", name = "test: Adding missing or correcting existing tests"},
  {value = "build", name = "build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"},
  {value = "ci", name = "ci: Changes to CI configuration files and scripts (example scopes: GitLabCI)"},
  {value = "chore", name = "chore: Other changes that don't modify src or test files"},
  {value = "revert", name = "revert: Reverts a previous commit"},
]
# choices = ["fix", "feat", "docs", "style", "refactor", "perf", "test", "build", "ci", "chore", "revert"]  # short version
message = "Select the type of change you are committing."
use_search_filter = true
use_jk_keys = false

[[tool.commitizen.customize.questions]]
type = "confirm"
name = "show_scope"
message = "Do you want to add a scope for this commit?"

[[tool.commitizen.customize.questions]]
type = "input"
name = "scope"
message = "Enter the scope for this commit (optional):"

[[tool.commitizen.customize.questions]]
type = "input"
name = "message"
message = "Enter commit message:"
